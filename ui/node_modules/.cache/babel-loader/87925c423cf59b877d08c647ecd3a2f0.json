{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.parse = exports.DEFAULT_PRIORITY = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n/*\n * Initial settings for connect.\n * It could be changed by passing values into TrezorConnect.init(...) method\n */\n\n\nvar VERSION = '7.0.3';\nvar versionN = VERSION.split('.').map(function (s) {\n  return parseInt(s);\n});\nvar DIRECTORY = \"\" + versionN[0] + (versionN[1] > 0 ? \".\" + versionN[1] : '') + \"/\";\nvar DEFAULT_DOMAIN = \"https://connect.trezor.io/\" + DIRECTORY;\nvar DEFAULT_PRIORITY = 2;\nexports.DEFAULT_PRIORITY = DEFAULT_PRIORITY;\nvar initialSettings = {\n  configSrc: 'data/config.json',\n  // constant\n  version: VERSION,\n  // constant\n  debug: false,\n  origin: null,\n  priority: DEFAULT_PRIORITY,\n  trustedHost: false,\n  connectSrc: DEFAULT_DOMAIN,\n  iframeSrc: DEFAULT_DOMAIN + \"iframe.html\",\n  popup: true,\n  popupSrc: DEFAULT_DOMAIN + \"popup.html\",\n  webusbSrc: DEFAULT_DOMAIN + \"webusb.html\",\n  transportReconnect: false,\n  webusb: true,\n  pendingTransportEvent: true,\n  supportedBrowser: typeof navigator !== 'undefined' ? !/Trident|MSIE/.test(navigator.userAgent) : true,\n  extension: null,\n  manifest: null\n};\nvar currentSettings = initialSettings;\n\nvar parseManifest = function parseManifest(manifest) {\n  if (typeof manifest.email !== 'string') {\n    return null;\n  }\n\n  if (typeof manifest.appUrl !== 'string') {\n    return null;\n  }\n\n  return {\n    email: manifest.email,\n    appUrl: manifest.appUrl\n  };\n};\n\nvar parse = function parse(input) {\n  if (!input) return currentSettings;\n  var settings = (0, _objectSpread2.default)({}, currentSettings);\n\n  if (input.hasOwnProperty('debug')) {\n    if (Array.isArray(input)) {// enable log with prefix\n    }\n\n    if (typeof input.debug === 'boolean') {\n      settings.debug = input.debug;\n    } else if (typeof input.debug === 'string') {\n      settings.debug = input.debug === 'true';\n    }\n  }\n\n  if (typeof input.connectSrc === 'string') {\n    // TODO: escape string, validate url\n    settings.connectSrc = input.connectSrc;\n  } else if (typeof window !== 'undefined' && typeof window.__TREZOR_CONNECT_SRC === 'string') {\n    settings.connectSrc = window.__TREZOR_CONNECT_SRC;\n  }\n\n  settings.iframeSrc = settings.connectSrc + \"iframe.html\";\n  settings.popupSrc = settings.connectSrc + \"popup.html\";\n  settings.webusbSrc = settings.connectSrc + \"webusb.html\";\n\n  if (typeof input.transportReconnect === 'boolean') {\n    settings.transportReconnect = input.transportReconnect;\n  }\n\n  if (typeof input.webusb === 'boolean') {\n    settings.webusb = input.webusb;\n  }\n\n  if (typeof input.popup === 'boolean') {\n    settings.popup = input.popup;\n  }\n\n  if (typeof input.pendingTransportEvent === 'boolean') {\n    settings.pendingTransportEvent = input.pendingTransportEvent;\n  } // local files\n\n\n  if (typeof window !== 'undefined' && window.location.protocol === 'file:') {\n    settings.origin = \"file://\" + window.location.pathname;\n    settings.webusb = false;\n  }\n\n  if (typeof input.extension === 'string') {\n    settings.extension = input.extension;\n  }\n\n  if (typeof input.manifest === 'object') {\n    settings.manifest = parseManifest(input.manifest);\n  }\n\n  currentSettings = settings;\n  return currentSettings;\n};\n\nexports.parse = parse;","map":null,"metadata":{},"sourceType":"script"}